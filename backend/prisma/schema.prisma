// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  firstname String
  lastname  String?
  email     String     @unique
  password  String?
  imgUrl    String?
  jds       Jd[] // one-to-many relations from the users table
  resumes   Resume[]
  analyses  Analysis[]
  createdAt DateTime   @default(now())
}

model Jd {
  id          String     @id @default(uuid())
  description String
  userId      String // foreign key : A column in one table that represents a primary key of another table
  user        User       @relation(fields: [userId], references: [id])
  analyses    Analysis[]
  createdAt   DateTime   @default(now())
}

model Resume {
  id        String     @id @default(uuid())
  fileName  String
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  analyses  Analysis[]
  createdAt DateTime   @default(now())
}

model Analysis {
  id              String         @id @default(uuid())
  resumeId        String
  jdId            String
  userId          String
  status          AnalysisStatus @default(queued)
  progress        Int            @default(0)
  error           String?
  matchScore      Float?
  strengths       String[]
  missingKeywords String[]
  recommendations String[]
  suggestedEdits  Json?
  resume          Resume         @relation(fields: [resumeId], references: [id])
  jd              Jd             @relation(fields: [jdId], references: [id])
  user            User           @relation(fields: [userId], references: [id])
  createdAt       DateTime       @default(now())
}

enum AnalysisStatus {
  queued
  processing
  completed
  failed
}
